- binary_sensor:
    - name: abnormal temperature
      unique_id: abnormal_temperature
      device_class: problem
      state: >
        {% set a = states('sensor.attic_thermometer')     | float(0) %}
        {% set b = states('sensor.bathroom_thermometer')  | float(0) %}
        {% set c = states('sensor.bedroom_thermometer')   | float(0) %}
        {% set d = states('sensor.guestroom_thermometer') | float(0) %}
        {% set e = states('sensor.hall_thermometer')      | float(0) %}
        {% set f = states('sensor.lounge_thermometer')    | float(0) %}
        {% set g = states('sensor.shed_thermometer')      | float(0) %}
        {{ a<0 or b<0 or c<0 or d<0 or e<0 or f<0 or g<0 or a>30 or b>30 or c>30 or d>30 or e>30 or f>30 or g>30 }}
    - name: vacuum low battery
      unique_id: vacuum_low_battery
      availability: "{{ not is_state('vacuum.berry', 'unavailable') }}"
      device_class: battery
      state: "{{ state_attr('vacuum.berry', 'battery_level') | float < 10 }}"
      icon: "{{ state_attr('vacuum.berry', 'battery_icon') }}"
    - name: Abnormal voltage
      unique_id: abnormal_voltage
      availability: "{{ states('sensor.grid_voltage') | is_number or states('sensor.growatt_reactive_voltage') | float(-1) >= 0 }}"
      device_class: problem
      state: >
        {% set input = states('sensor.grid_voltage') | float %}
        {% set input_available = not is_state('sensor.grid_voltage', 'unavailable') %}
        {% set solarpanel = states('sensor.growatt_reactive_voltage') | float %}
        {{ (input < 210 and input_available) or solarpanel < 210 or input > 245 or solarpanel > 245}}
    - name: Shed status
      unique_id: shed_status
      device_class: problem
      state: "{{ states('sensor.shed_thermometer') | float < 0 or states('sensor.shed_thermometer') | float > 10 }}"
      availability: "{{ not is_state('sensor.shed_thermometer', 'unavailable') }}"
    - name: Attic mold
      unique_id: attic_mold
      device_class: problem
      state: "{{ states('sensor.attic_mold') | float > 90 }}"
      availability: "{{ not is_state('sensor.attic_mold', 'unavailable') }}"
    - name: Bathroom mold
      unique_id: bathroom_mold
      device_class: problem
      state: "{{ states('sensor.bathroom_mold') | float > 90 }}"
      availability: "{{ not is_state('sensor.bathroom_mold', 'unavailable') }}"
    - name: Bedroom mold
      unique_id: bedroom_mold
      device_class: problem
      state: "{{ states('sensor.bedroom_mold') | float > 90 }}"
      availability: "{{ not is_state('sensor.bedroom_mold', 'unavailable') }}"
    - name: Guestroom mold
      unique_id: guestroom_mold
      device_class: problem
      state: "{{ states('sensor.guestroom_mold') | float > 90 }}"
      availability: "{{ not is_state('sensor.guestroom_mold', 'unavailable') }}"
    - name: Lounge mold
      unique_id: lounge_mold
      device_class: problem
      state: "{{ states('sensor.lounge_mold') | float > 90 }}"
      availability: "{{ not is_state('sensor.lounge_mold', 'unavailable') }}"
- sensor:
    - name: outside temperature
      unit_of_measurement: "Â°C"
      state: "{{ state_attr('weather.home', 'temperature')}}"
      device_class: temperature
    - name: outside humidity
      unit_of_measurement: "%"
      state: "{{ state_attr('weather.home', 'humidity')}}"
      device_class: humidity
    - name: outside airpressure
      unit_of_measurement: "hPa"
      state: "{{ state_attr('weather.home', 'pressure')}}"
      device_class: humidity
    - name: Expected production today
      unit_of_measurement: "kWh"
      state: "{{ states('sensor.energy_production_today_1') | float + states('sensor.energy_production_today_2') | float }}"
      device_class: energy
    - name: Expected production current hour
      unit_of_measurement: "kWh"
      state: "{{ states('sensor.energy_current_hour_1') | float + states('sensor.energy_current_hour_2') | float }}"
      device_class: energy
    - name: Expected production next hour
      unit_of_measurement: "kWh"
      state: "{{ states('sensor.energy_next_hour_1') | float + states('sensor.energy_next_hour_2') | float }}"
      device_class: energy
    - name: Current power consumption
      unit_of_measurement: "W"
      availability: "{{ not is_state('sensor.power_from_grid', 'unavailable') }}"
      state: "{{ states('sensor.power_from_grid') | float + states('sensor.growatt_total_output_power') | float(0) }}"
      device_class: power
