abnormal_voltage:
  name: Abnormal voltage
  entity_id: binary_sensor.abnormal_voltage
  repeat: 30
  message: "{{ states('sensor.grid_voltage') }} is measured"
  notifiers:
    - pushnotification
abnormal_temperature:
  name: Abnormal temperature
  entity_id: binary_sensor.abnormal_temperature
  repeat: 30
  message: "Abnormal temperature measured"
  notifiers:
    - pushnotification
overheating:
  name: Overheating
  entity_id: binary_sensor.overheating
  repeat: 30
  message: >
    {% if is_state('binary_sensor.bathroom_overheating', 'on') %}
      Bathroom
    {% endif %}
    {% if is_state('binary_sensor.bike_overheating', 'on') %}
      Bike
    {% endif %}
    {% if is_state('binary_sensor.lounge_overheating', 'on') %}
      Lounge
    {% endif %}
    {% if is_state('binary_sensor.toilet_overheating', 'on') %}
      Toilet
    {% endif %}
  notifiers:
    - pushnotification
overpowering:
  name: Overpowering
  entity_id: binary_sensor.overpowering
  repeat: 30
  message: >
    {% if is_state('binary_sensor.bathroom_overpowering', 'on') %}
      Bathroom
    {% endif %}
    {% if is_state('binary_sensor.bike_light_overpowering', 'on') %}
      Bike light
    {% endif %}
    {% if is_state('binary_sensor.bike_socket_overpowering', 'on') %}
      Bike socket
    {% endif %}
    {% if is_state('binary_sensor.energy_overpowering', 'on') %}
      Energy
    {% endif %}
    {% if is_state('binary_sensor.lounge_overpowering', 'on') %}
      Lounge
    {% endif %}
    {% if is_state('binary_sensor.terrace_overpowering', 'on') %}
      Terrace
    {% endif %}
    {% if is_state('binary_sensor.toilet_overpowering', 'on') %}
      Toilet
    {% endif %}
  notifiers:
    - pushnotification
synology:
  name: synology
  entity_id: binary_sensor.synology_problem
  repeat: 30
  message: >
    {% if is_state('binary_sensor.augustinuserf_drive_2_below_min_remaining_life', 'on') %}
      binary_sensor.augustinuserf_drive_2_below_min_remaining_life
    {% endif %}
    {% if is_state('binary_sensor.synology_drive_1_below_min_remaining_life',      'on') %}
      binary_sensor.synology_drive_1_below_min_remaining_life
    {% endif %}
    {% if is_state('binary_sensor.synology_drive_2_below_min_remaining_life',      'on') %}
      binary_sensor.synology_drive_2_below_min_remaining_life
    {% endif %}
      {% if is_state('binary_sensor.augustinuserf_drive_2_exceeded_max_bad_sectors', 'on') %}
      binary_sensor.augustinuserf_drive_2_exceeded_max_bad_sectors
    {% endif %}
    {% if is_state('binary_sensor.synology_drive_1_exceeded_max_bad_sectors',      'on') %}
      binary_sensor.synology_drive_1_exceeded_max_bad_sectors
    {% endif %}
    {% if is_state('binary_sensor.synology_drive_2_exceeded_max_bad_sectors',      'on') %}
      binary_sensor.synology_drive_2_exceeded_max_bad_sectors
    {% endif %}
    {% if is_state('binary_sensor.augustinuserf_security_status',                  'on') %}
      binary_sensor.augustinuserf_security_status
    {% endif %}
    {% if is_state('binary_sensor.augustinuserf_security_status',                  'on') %}
      binary_sensor.augustinuserf_security_status
    {% endif %}
  notifiers:
    - pushnotification
shed_temperature:
  name: Shed temperature
  entity_id: binary_sensor.shed_status
  repeat: 30
  message: "Temperature in shed is {{ states('sensor.shed_thermometer') }}"
  done_message: Shed temperature is OK
  notifiers:
    - pushnotification
attic_mold:
  name: Attic mold
  entity_id: binary_sensor.attic_mold
  repeat: 60
  message: "Mold probability in attic is {{ states('sensor.attic_mold') }}"
  done_message: Mold at attic is unlikely again
  notifiers:
    - pushnotification
bathroom_mold:
  name: Bathroom mold
  entity_id: binary_sensor.bathroom_mold
  repeat: 60
  message: "Mold probability in bathroom is high for over an hour: {{ states('sensor.bathroom_mold') }}"
  done_message: Mold at bathroom is unlikely again
  skip_first: true
  notifiers:
    - pushnotification
bedroom_mold:
  name: Bedroom mold
  entity_id: binary_sensor.bedroom_mold
  repeat: 30
  message: "Mold probability in bedroom is high: {{ states('sensor.bedroom_mold') }}"
  done_message: Mold at bedroom is unlikely again
  notifiers:
    - pushnotification
guestroom_mold:
  name: Guestroom mold
  entity_id: binary_sensor.guestroom_mold
  repeat: 30
  message: "Mold probability in guestroom is high: {{ states('sensor.guestroom_mold') }}"
  done_message: Mold at guestroom is unlikely again
  notifiers:
    - pushnotification
lounge_mold:
  name: Lounge mold
  entity_id: binary_sensor.lounge_mold
  repeat: 30
  message: "Mold probability in lounge is high: {{ states('sensor.lounge_mold') }}"
  done_message: Mold at lound is unlikely again
  notifiers:
    - pushnotification
plant:
  name: Plant
  entity_id: plant.flower
  state: problem
  skip_first: true
  repeat:
    - 1
    - 480
  message: "Plant: {{ state_attr('plant.flower', 'problem') }}"
  notifiers:
    - pushnotification
    - mobile_app_sm_a520f
vacuum:
  name: Vacuum
  entity_id: binary_sensor.vacuum_low_battery
  repeat: 30
  message: "Battery vacuum is almost empty {{ state_attr('vacuum.berry', 'battery_level') }}"
  notifiers:
    - pushnotification
